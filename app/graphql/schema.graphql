type Category {
  events(first: Int = 5): [Event!]!
  id: ID!
  name: String!
  slug: String!
}

"""
Autogenerated input type of CreateCategory
"""
input CreateCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  slug: ID!
}

"""
Autogenerated return type of CreateCategory
"""
type CreateCategoryPayload {
  category: Category

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
}

"""
Autogenerated input type of CreateEvent
"""
input CreateEventInput {
  categoryId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  endTime: ISO8601DateTime!
  name: String!
  startTime: ISO8601DateTime!
}

"""
Autogenerated return type of CreateEvent
"""
type CreateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  event: Event
}

type Event {
  category: Category!
  id: ID!
  image: String
  name: String!
  startTime: ISO8601DateTime!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  createCategory(input: CreateCategoryInput!): CreateCategoryPayload
  createEvent(input: CreateEventInput!): CreateEventPayload
}

type Query {
  """
  All the categories
  """
  categories: [Category!]!

  """
  A single category
  """
  category(id: ID!): Category

  """
  A single event
  """
  event(id: ID!): Event

  """
  All the events
  """
  events: [Event!]!
}